services:
  mail-service:
    hostname: mailer
    build:
      context: ./micro-services/mail-service
    networks:
      - backend
    depends_on:
      - mailhog
    ports:
      - 8084:80
    volumes:
      - ./micro-services/mail-service:/app

  broker-service:
    build:
      context: ./micro-services/broker-service
    restart: always
    volumes:
      - ./micro-services/broker-service:/app
    ports:
      - 8081:80
    networks:
      - backend
  authentication-service:
    hostname: auth-service
    build:
      context: ./micro-services/authentication-service
    restart: always
    ports:
      - 8082:80
    networks:
      - backend
    environment:
      DNS: "host=db port=5432 user=postgres password=postgres dbname=db sslmode=disable timezone=UTC connect_timeout=5"
    volumes:
      - ./micro-services/authentication-service:/app
    depends_on:
      - db
  logger-service:
    hostname: logger-service
    build:
      context: ./micro-services/logger-service
    restart: always
    ports:
      - 8083:80
    networks:
      - backend
    volumes:
      - ./micro-services/logger-service:/app
    depends_on:
      - mongo
  db:
    image: postgres:alpine
    restart: always
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: db
    ports:
      - 5432:5432
    networks:
      - backend
  mongo:
    image: mongo:latest
    hostname: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: gab
      MONGO_INITDB_ROOT_PASSWORD: S3cret
    volumes:
      - ./mongo-data:/data/db
    networks:
      - backend
  mailhog:
    image: mailhog/mailhog:latest
    hostname: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - backend
volumes:
  postgres-data:
networks:
  backend:
